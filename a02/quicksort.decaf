/* WWU CS 410 A02
   QuickSort implementation in decaf
   By: Charles Cordova, Nicholas Beichley, j
*/

//is callout("print_string", "...") legal? I can't find anything in specs about it
class QuickSort {

  int list[100];

  //init array with values
  void initList() {
    int i;
    for (i = 0; i < 100; i = i + 1) {
      list[i] = (i * 2382983) % 100;
    }
  }

  //display list
  void printList() {
    int i;
    callout("print_string", "List:\n");//I hope print_string is a libarary function? how else can we print a string?
    for (i = 0; i < 100; i = i + 1) {
      callout("print_int", list[i]);
    }
    callout("print_string", "\n");//print char I dono?
  }

  //swap list[aIdx] and list[bIdx]
  void swapList(int aIdx, int bIdx){
    int temp;
    temp = list[aIdx];
    list[aIdx] = list[bIdx];
    list[bIdx] = temp;
  }

  //standard old quicksort partition around pivot
  int partition(int left, int right, int pivotIdx) {
    int pivotVal, storeIdx, i;

    pivotVal= list[pivotIdx];
    swapList(pivotIdx, right);
    storeIdx = left;
    
    for (i = left; i < right - 1; i = i + 1){
      if (list[i] < pivotVal){
	swapList(i, storeIdx);
	storeIdx = storeIdx + 1;
      }
    }
    swapList(storeIdx, right);
    return storeIdx;
  }

  void qs(int left, int right){
    if (left < right){
      int pivotIdx, newPivotIdx;
      pivotIdx = 33; //I do what I want
      newPivotIdx = partition(left, right, pivotIdx);
      qs(left, newPivotIdx - 1);
      qs(newPivotIdx + 1, right);
    }
  }

  void main(){
    initList();
    printList();
    callout("print_string", "After sorting:\n")//need a new line after last ints printed
    qs(0, 100); //100, or 99?
    printList();
    //exit(0); //I don't think we need this?
  }
}

